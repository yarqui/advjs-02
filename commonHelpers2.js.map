{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport {\n  ATTRIBUTES,\n  ATTRIBUTE_METHODS,\n  handleAttributeMethods,\n} from './common';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  timePicker: document.querySelector('input#datetime-picker'),\n  startBtn: document.querySelector('button[data-start]'),\n  days: document.querySelector('.value[data-days]'),\n  hours: document.querySelector('.value[data-hours]'),\n  minutes: document.querySelector('.value[data-minutes]'),\n  seconds: document.querySelector('.value[data-seconds]'),\n};\n\nlet selectedDateAndTime;\nlet currentDateAndTime;\nlet activeIntervalId;\n\nconst convertMs = ms => {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n};\n\nconst addLeadingZero = timeProps =>\n  Object.fromEntries(\n    Object.entries(timeProps).map(([key, value]) => [\n      key,\n      value.toString().padStart(2, '0'),\n    ])\n  );\n\nconst handlePickResult = () => {\n  const isReady = currentDateAndTime < selectedDateAndTime;\n\n  if (!isReady) {\n    iziToast.warning({\n      message: 'Please choose a date in the future',\n      position: 'topCenter',\n      timeout: 2500,\n    });\n    selectedDateAndTime = currentDateAndTime;\n  }\n\n  handleAttributeMethods(\n    ATTRIBUTES.disabled,\n    isReady ? ATTRIBUTE_METHODS.remove : ATTRIBUTE_METHODS.set,\n    refs.startBtn\n  );\n};\n\nconst startTimer = () => {\n  currentDateAndTime = new Date().getTime();\n  handleAttributeMethods(ATTRIBUTES.disabled, ATTRIBUTE_METHODS.set, [\n    refs.startBtn,\n    refs.timePicker,\n  ]);\n  updateTimer();\n\n  activeIntervalId = setInterval(() => {\n    if (selectedDateAndTime - currentDateAndTime < 1000) {\n      clearInterval(activeIntervalId);\n      handleAttributeMethods(\n        ATTRIBUTES.disabled,\n        ATTRIBUTE_METHODS.remove,\n        refs.timePicker\n      );\n      return;\n    }\n\n    currentDateAndTime += 1000;\n    updateTimer();\n  }, 1000);\n};\n\nconst updateTimer = () => {\n  const timeDifference = selectedDateAndTime - currentDateAndTime;\n  const convertedMs = convertMs(timeDifference);\n  const { days, hours, minutes, seconds } = addLeadingZero(convertedMs);\n\n  refs.days.textContent = days;\n  refs.hours.textContent = hours;\n  refs.minutes.textContent = minutes;\n  refs.seconds.textContent = seconds;\n};\n\nconst pickDate = selectedDates => {\n  if (selectedDates) {\n    selectedDateAndTime = selectedDates[0].getTime();\n    currentDateAndTime = new Date().getTime();\n\n    handlePickResult();\n  }\n};\n\nconst flatpickrOptions = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose: pickDate,\n  //   disable: [{ from: new Date(0), to: new Date().getTime() }], // Block all dates before current\n};\n\nflatpickr(refs.timePicker, flatpickrOptions);\n\nhandleAttributeMethods(\n  ATTRIBUTES.disabled,\n  ATTRIBUTE_METHODS.set,\n  refs.startBtn\n);\n\nrefs.startBtn.addEventListener('click', startTimer);\n"],"names":["refs","selectedDateAndTime","currentDateAndTime","activeIntervalId","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","timeProps","key","value","handlePickResult","isReady","iziToast","handleAttributeMethods","ATTRIBUTES","ATTRIBUTE_METHODS","startTimer","updateTimer","timeDifference","convertedMs","pickDate","selectedDates","flatpickrOptions","flatpickr"],"mappings":"6MAUA,MAAMA,EAAO,CACX,WAAY,SAAS,cAAc,uBAAuB,EAC1D,SAAU,SAAS,cAAc,oBAAoB,EACrD,KAAM,SAAS,cAAc,mBAAmB,EAChD,MAAO,SAAS,cAAc,oBAAoB,EAClD,QAAS,SAAS,cAAc,sBAAsB,EACtD,QAAS,SAAS,cAAc,sBAAsB,CACxD,EAEA,IAAIC,EACAC,EACAC,EAEJ,MAAMC,EAAYC,GAAM,CAQtB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,EAEMC,EAAiBC,GACrB,OAAO,YACL,OAAO,QAAQA,CAAS,EAAE,IAAI,CAAC,CAACC,EAAKC,CAAK,IAAM,CAC9CD,EACAC,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACtC,CAAK,CACL,EAEMC,EAAmB,IAAM,CAC7B,MAAMC,EAAUb,EAAqBD,EAEhCc,IACHC,EAAS,QAAQ,CACf,QAAS,qCACT,SAAU,YACV,QAAS,IACf,CAAK,EACDf,EAAsBC,GAGxBe,EACEC,EAAW,SACXH,EAAUI,EAAkB,OAASA,EAAkB,IACvDnB,EAAK,QACT,CACA,EAEMoB,EAAa,IAAM,CACvBlB,EAAqB,IAAI,OAAO,UAChCe,EAAuBC,EAAW,SAAUC,EAAkB,IAAK,CACjEnB,EAAK,SACLA,EAAK,UACT,CAAG,EACDqB,IAEAlB,EAAmB,YAAY,IAAM,CACnC,GAAIF,EAAsBC,EAAqB,IAAM,CACnD,cAAcC,CAAgB,EAC9Bc,EACEC,EAAW,SACXC,EAAkB,OAClBnB,EAAK,UACb,EACM,MACD,CAEDE,GAAsB,IACtBmB,GACD,EAAE,GAAI,CACT,EAEMA,EAAc,IAAM,CACxB,MAAMC,EAAiBrB,EAAsBC,EACvCqB,EAAcnB,EAAUkB,CAAc,EACtC,CAAE,KAAAhB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAea,CAAW,EAEpEvB,EAAK,KAAK,YAAcM,EACxBN,EAAK,MAAM,YAAcO,EACzBP,EAAK,QAAQ,YAAcQ,EAC3BR,EAAK,QAAQ,YAAcS,CAC7B,EAEMe,EAAWC,GAAiB,CAC5BA,IACFxB,EAAsBwB,EAAc,GAAG,QAAO,EAC9CvB,EAAqB,IAAI,OAAO,UAEhCY,IAEJ,EAEMY,EAAmB,CACvB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAASF,CAEX,EAEAG,EAAU3B,EAAK,WAAY0B,CAAgB,EAE3CT,EACEC,EAAW,SACXC,EAAkB,IAClBnB,EAAK,QACP,EAEAA,EAAK,SAAS,iBAAiB,QAASoB,CAAU"}